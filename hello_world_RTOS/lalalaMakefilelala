CPU=arm7tdmi

BUILD=build

CFLAGS=

GCC=arm-eabi-gcc -mcpu=$(CPU) -mtune=$(CPU)

#O3 - code speed optimizate
#Os - code size optimizate
#-i /....... - way

LD=arm-eabi-gcc -nostdlib  -Wl,-T,script.ld
#-Wl,-T,script.ld -script 
#-Wl,-Ttext = 0x10000  - entery point 

OBC=arm-eabi-objcopy

PATH=SRC
PORT_DIR=FreeRTOS/Source/portable/GCC/ARM7_AT91SAM7S
OBJS=boot.o main.o FreeRTOS/croutine.o FreeRTOS/tasks.o FreeRTOS/queue.o FreeRTOS/list.o FreeRTOS/portable/MemMang/heap_1.o $(ARM7_AT91SAM7S)/port.c 

all: make_folder $(BUILD)/My_FreeRTOS_LED.bin

make_folder:
	if not exist build mkdir build

clean:
	del /S /Q $(BUILD)\*.*

$(BUILD)/My_FreeRTOS_LED.bin: $(BUILD)/My_FreeRTOS_LED.elf
	$(OBC) -O binary $< $@

$(BUILD)/My_FreeRTOS_LED.elf: $(OBJS:%.o=$(BUILD)/%.o)
	$(LD) $(OBJS:%.o=$(BUILD)/%.o) -lgcc -LSRC -o $@

$(BUILD)/%.o: %.c
	$(GCC) $(CFLAGS) -c $< -o $@
	
$(BUILD)/%.o: %.S
	$(GCC) $(CFLAGS) -c $< -o $@
